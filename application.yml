server.port: 8085
management:
  endpoint:
    health:
      show-details: always
spring.cloud:
    stream:
      kafka:
        properties:
          key.converter.schema.registry.url: http://ec2-18-228-224-98.sa-east-1.compute.amazonaws.com:8081
          value.converter.schema.registry.url: http://ec2-18-228-224-98.sa-east-1.compute.amazonaws.com:8081
        binder:
          brokers: http://ec2-18-228-224-98.sa-east-1.compute.amazonaws.com:9092
        bindings:
          reply:
            consumer:
              startOffset: earliest
              configuration:
                key:
                  deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value:
                  deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
                spring:
                  json:
                    trusted:
                      packages: '*'
          request:
            producer:
              configuration:
                key:
                  serializer: org.apache.kafka.common.serialization.StringSerializer
                value:
                  serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bindings:
        reply:
          destination: transferencia-concluida
          group: transferencia
          consumer:
            partitioned: false
        request:
          destination: comando-estado
          producer:
            partition-count: 2

spring.kafka:
  properties:
    max.poll.interval.ms: 1000
    schema.registy.url: http://ec2-18-228-224-98.sa-east-1.compute.amazonaws.com:8081
    specific.avro.reader: true
  bootstrap-server: http://ec2-18-228-224-98.sa-east-1.compute.amazonaws.com:9092
  value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
  consumer:
    auto-offset-reset: latest
    enable-auto-commit: false
    max-poll-records: 500
  listener:
    ack-mode: MANUAL_IMMEDIATE
    concurrency: 11
    producer:
      client-id: transferencia
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      client-id: transferencia
      group-id: transferencia
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      enable-auto-commit: false
      auto-offset-reset: latest

transferencia:
  kafka:
    schedule:
      group-id: transferencia-scheduler
      concurrency: 11
      topic: transferencia-processada
    consumer:
      topic-atutalizado: comando-atualizar
      topic-comando: comando-processar
      topic-estado: comando-estado
      topics: tef-processada
    producer:
      topic-processado: transferencia-processada
      topic-finalizado: transferencia-concluida
      topic-estado: comando-estado

spring:
  data:
    cassandra:
      contact-points: cassandra.sa-east-1.amazonaws.com
      port: 9142
      keyspace-name: keyspace_transferencias